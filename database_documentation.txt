                             Database documentation

There are five types of database language which are given below:
  
  1. Data Defination Language    : create,drop,truncate,rename
  2. Data Control Language       : revoke,grant
  3. Data Manipulation Language  : insert,delete,update
  4. Data Query Language         : select
  5. Transaction Control Language: rollback,commit

                             Database principle 

Transactions:

         In the context of databases and data storage systems, a transaction is any operation that 
is treated as a single unit of work, which either completes fully or does not complete at 
all, and leaves the storage system in a consistent state.

ACID properties:

ACID is an acronym that refers to the set of 4 key properties that define a transaction: 
Atomicity, Consistency, Isolation, and Durability. If a database operation has these ACID 
properties, it can be called an ACID transaction, and data storage systems that apply these 
operations are called transactional systems. ACID transactions guarantee that each read, 
write, or modification of a table has the following properties:

Atomicity: 
    Each statement in a transaction (to read, write, update or delete data) is treated as a 
single unit. Either the entire statement is executed, or none of it is executed. This 
property prevents data loss and corruption from occurring.

Consistency:
    Ensures that transactions only make changes to tables in predefined, predictable ways. 
Transactional consistency ensures that corruption or errors in your data do not create 
unintended consequences for the integrity of our table.

Isolation:
    When multiple users are reading and writing from the same table all at once, isolation
 of their transactions ensures that the concurrent transactions donâ€™t interfere with or 
affect one another. 

Durability:
    Ensures that changes to your data made by successfully executed transactions will be
saved, even in the event of system failure.

                                   Normalization

Normalization is a database design technique that reduces data redundancy and eliminates 
undesirable characteristics like Insertion, Update and Deletion Anomalies. Normalization 
rules divides larger tables into smaller tables and links them using relationships. The 
purpose of Normalisation in SQL is to eliminate redundant (repetitive) data and ensure 
data is stored logically.

Here is a list of first three Normal Forms in SQL:

1NF (First Normal Form)
2NF (Second Normal Form)
3NF (Third Normal Form)

1NF:
  Rule 1- Each table cell should contain a single value.
  Rule 2- record needs to be unique.

2NF:
   Rule 1- Be in 1NF
   Rule 2- Single Column Primary Key that does not functionally dependant on any subset of 
           candidate key relation

3NF:
   Rule 1- Be in 2NF
   Rule 2- Has no transitive functional dependencies
   *A transitive functional dependency is when changing a non-key column, might cause any 
    of the other non-key columns to change.


